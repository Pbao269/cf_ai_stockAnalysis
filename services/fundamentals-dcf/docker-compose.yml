# Multi-Model DCF Valuation System
# Single docker-compose for all services (no need to scale independently)

version: '3.8'

services:
  # Centralized data service - shared by all DCF models
  data-service:
    build:
      context: ./python-data
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - FLASK_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # 3-Stage DCF Model (Goldman Sachs standard)
  dcf-3stage:
    build:
      context: ./python-3stage
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - DATA_SERVICE_URL=http://data-service:8082
    depends_on:
      - data-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # SOTP Model (Sum-of-the-Parts for conglomerates)
  dcf-sotp:
    build:
      context: ./python-sotp
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - PORT=8084
      - DATA_SERVICE_URL=http://data-service:8082
    depends_on:
      - data-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # H-Model DCF (Morningstar standard)
  dcf-hmodel:
    build:
      context: ./python-hmodel
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - PORT=8085
      - DATA_SERVICE_URL=http://data-service:8082
    depends_on:
      - data-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  default:
    name: dcf-network

